@extends('layouts.default')

@section('title', $post->title)

@section('content')
    <h1>
        <a href="{{ route('posts.index') }}" class="header-menu">back</a>
        {{-- <a href="{{ url('posts') }}" class="header-menu">BACK</a> --}}
            {{-- urlの引数は静的な文字列が対応する（現在、『/posts』がindexページに値する --}}
        {{ $post->title }}
    </h1>
    {{-- <p>{{ $post->body }}</p> --}}
      {{-- 上記の記述だと、カラム内に改行が入っていた場合、改行が認識されない --}}
    <p>{!! nl2br(e($post->body)) !!}</p>
      {{-- 基本は『{{~~}}』により、htmlエンティティにエスケープするべき。
           →上記を行うと特殊文字が単なる文字列変換される
            ＝<>などが文字数列に置き換わり、タグとして生成されなくなる。
            =フォームなどで悪意のあるスクリプト送信を防いでくれる。（XSS攻撃とも言う？）
       --}}
      {{-- 場合によってはhtmlエンティティにエスケープしたくない事がある（表示の場合）
           その時に『{!!~!!}』を用いる。
       --}}

      {{-- 『htmlspecialchars()』：HTMLエンティティ化する関数。
            ＝ 特殊な意味を持つ特殊文字（>や""など）を単なる文字列に変換すること。
            <ex> echo htmlspecialchars('<a href="#">HTMLエンティティ化する。</a>');
              → 『&lt;a href=&quot;#&quot;&gt;HTMLエンティティ&lt;/a&gt;』
        --}}
      {{-- 『{!!〜〜!!}』：中身をエスケープしないで値を出力する命令（データ・文章の改行をbrタグに変換したい為） --}}
      {{-- エスケープ処理：通常の記法では出力できない文字を出力させる処理のこと。
            <ex>『'』：'今日もA\'は元気だ。'
                 →「‘」以外に改行やタブなど、普段出力を意識しないような文字にも利用される。
         --}}

      {{-- 『{!!〜〜!!}』：中身をエスケープしないで値を出力する命令（データ・文章の改行をbrタグに変換したい為） --}}
      {{-- 『e()』：指定された文字列にhtmlspecialcharsを実行します。 --}}
      {{-- 『nl2br()』：改行文字をbrタグに変換 --}}
@endsection
